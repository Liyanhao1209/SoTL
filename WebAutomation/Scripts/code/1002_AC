import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.Arrays;import java.util.Comparator;import java.util.Map;import java.util.TreeMap;/*3 2 4 1 7 02 4 1 12 31 43 2 4 1 7 02 4 -4 1 */public class Main{    public static Integer[] str2nums(String s){        return Arrays.stream(s.split(" ")).map(Integer::parseInt).toArray(Integer[]::new);    }    public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        String s1,s2;        while((s1=br.readLine())!=null && (s2=br.readLine())!=null){            if(s1.isEmpty()||s2.isEmpty()){                break;            }            Integer[] A = str2nums(s1);            Integer[] B = str2nums(s2);            StringBuilder sb = getStringBuilder(A, B);            System.out.println(sb);        }    }    private static StringBuilder getStringBuilder(Integer[] A, Integer[] B) {        TreeMap<Integer, Integer> map = new TreeMap<>((o1, o2) -> -Integer.compare(o1,o2));        addCo(map,A);        addCo(map,B);        StringBuilder sb = new StringBuilder();        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {            if(entry.getValue()==0){                continue;            }            sb.append(entry.getValue()).append(" ").append(entry.getKey()).append(" ");        }        return sb;    }    private static void addCo(TreeMap<Integer,Integer> map,Integer[] nums){        for (int i = 0; i < nums.length; i+=2) {            Integer co = nums[i];            Integer pos = nums[i + 1];            map.merge(pos,co,Integer::sum);        }    }}