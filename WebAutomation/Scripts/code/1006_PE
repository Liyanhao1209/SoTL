import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.*;/*4 10 3 0 10 0 4 02 0 0 00 0 1 0 */public class Main{    public static Integer[] str2nums(String s){        return Arrays.stream(s.split(" ")).map(Integer::parseInt).toArray(Integer[]::new);    }    public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        int n = Integer.parseInt(br.readLine());        List<int[]>[] g = new ArrayList[n];        Arrays.setAll(g,e->new ArrayList<>());        for (int i = 0; i < n; i++) {            Integer[] nums = str2nums(br.readLine());            for (int j = 0; j < n; j++) {                if(nums[j]!=0){                    g[i].add(new int[]{j,nums[j]});                }            }        }        HashSet<Integer> vertices = new HashSet<>();        vertices.add(0);        long cost = 0L;        while(vertices.size()<n){            int min = Integer.MAX_VALUE;            int v = -1;            for (Integer vertex : vertices) {                for (int[] child : g[vertex]) {                    if(!vertices.contains(child[0])){                        if(min>child[1]){                            min = child[1];                            v = child[0];                        }                    }                }            }            if(v==-1){                break;            }            cost+=min;            vertices.add(v);        }        System.out.print(cost);    }}